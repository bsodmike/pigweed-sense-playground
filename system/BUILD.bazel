# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@pigweed//pw_build:compatibility.bzl", "host_backend_alias")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "module_config",
    defines = [
        # TODO: https://pwbug.dev/352389854 - Move this to per-platform config
        # when platform flags  are implemented.
        #
        # Allow us to capture two 64bit pointers in a pw::function.
        "PW_FUNCTION_INLINE_CALLABLE_SIZE=16UL",
        "PW_ASSERT_BASIC_ACTION=PW_ASSERT_BASIC_ACTION_EXIT",
    ],
)

label_flag(
    name = "system",
    build_setting_default = ":unspecified_backend",
)

host_backend_alias(
    name = "unspecified_backend",
    backend = "//targets/host:system",
)

cc_library(
    name = "headers",
    hdrs = [
        "pubsub.h",
        "system.h",
        "worker.h",
    ],
    deps = [
        "//modules/air_sensor",
        "//modules/board",
        "//modules/buttons:manager",
        "//modules/led:monochrome_led",
        "//modules/led:polychrome_led",
        "//modules/light:sensor",
        "//modules/proximity:sensor",
    ],
)

cc_library(
    name = "worker",
    srcs = ["worker.cc"],
    hdrs = ["worker.h"],
    deps = [
        "//modules/worker",
        "@pigweed//pw_function",
        "@pigweed//pw_log",
        "@pigweed//pw_system:async",
    ],
)

cc_library(
    name = "pubsub",
    srcs = ["pubsub.cc"],
    hdrs = ["pubsub.h"],
    deps = [
        ":worker",
        "//modules/pubsub:events",
    ],
)
