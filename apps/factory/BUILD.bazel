# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@bazel_skylib//rules:native_binary.bzl", "native_binary")
load(
    "@pigweed//pw_protobuf_compiler:pw_proto_library.bzl",
    "nanopb_proto_library",
    "nanopb_rpc_proto_library",
)
load("@pigweed//targets/rp2040:flash.bzl", "flash_rp2040")
load("@rules_python//python:proto.bzl", "py_proto_library")
load("//targets/rp2:binary.bzl", "rp2040_binary")

package(default_visibility = ["//visibility:public"])

cc_binary(
    name = "factory",
    srcs = ["main.cc"],
    deps = [
        "//modules/air_sensor:service",
        "//modules/blinky:service",
        "//modules/board:service",
        "//modules/pubsub:service",
        "//modules/proximity:manager",
        "//system:pubsub",
        "//system:worker",
        "//system",
        "@pigweed//pw_log",
        "@pigweed//pw_system:async",
        "@pigweed//pw_thread:thread",
        ":service",

        # These should be provided by pw_system:async.
        "@pigweed//pw_assert:assert_backend_impl",
        "@pigweed//pw_assert:check_backend_impl",
        "@pigweed//pw_log:backend_impl",
        "@pigweed//pw_system:extra_platform_libs",
    ],
)

# Create an rp2040 flashable ELF
rp2040_binary(
    name = "rp2040.elf",
    binary = ":factory",
)

native_binary(
    name = "rp2040_console",
    src = "//tools:console",
    args = [
        "-b",
        "115200",
        "--token-databases",
        "$(rootpath //apps/factory:rp2040.elf)",
        "--config-file",
        "$(rootpath //:pw_console_config)",
    ],
    data = [
        ":rp2040.elf",
        "//:pw_console_config",
    ],
)

flash_rp2040(
    name = "flash",
    rp2040_binary = "rp2040.elf",
)

cc_library(
    name = "service",
    srcs = ["service.cc"],
    hdrs = ["service.h"],
    deps = [
        ":nanopb_rpc",
        "//modules/buttons:manager",
    ],
)

proto_library(
    name = "proto",
    srcs = ["factory.proto"],
    import_prefix = "factory_pb",
    strip_import_prefix = "/apps/factory",
    deps = [
        "@pigweed//pw_protobuf:common_proto",
    ],
)

nanopb_proto_library(
    name = "nanopb",
    deps = [":proto"],
)

nanopb_rpc_proto_library(
    name = "nanopb_rpc",
    nanopb_proto_library_deps = [":nanopb"],
    deps = [":proto"],
)

py_proto_library(
    name = "py_pb2",
    deps = [":proto"],
)
